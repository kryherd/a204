arrange(flights, desc(dep_delay), dep_time)
arrange(flights, airtime)
arrange(flights, air_time)
arrange(flights, air_time)
arrange(flights, distance)
arrange(flights, desc(distance))
select(flights, -(year:day))
rename(flights, tail_num = tailnum)
?everything
select(flights, time_hour, air_time, everything())
View(delay)
flights
select(flights, dep_time, dep_delay, arr_time, arr_delay)
select(flights, start_with("dep") | starts_with("arr"))
select(flights, starts_with("dep") | starts_with("arr"))
select(flights, starts_with("dep"), starts_with("arr"))
select(flights, ends_with("time"), ends_with("delay"))
select(flights, ends_with("time"), ends_with("delay"), !contains("sched"))
names(flights)
select(flights, c(4,6,7,9))
select(flights, hour, hour)
select(flights, year, year, day, year)
vars <- c("year", "month", "day", "dep_delay", "arr_delay")
select(flights, one_of(vars))
select(flights, contains("TIME"))
?contains
select(flights, contains("TIME", ignore.case = FALSE))
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
mutate(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60
)
mutate(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60,
gain_per_hour = gain / hours
)
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
mutate(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60,
gain_per_hour = gain / hours
)
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
mutate(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60,
gain_per_hour = gain / hour
)
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
flights_sml
mutate(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60,
hours = air_time / 60,
gain_per_hour = gain / hour
)
mutate(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60,
hours = air_time / 60,
gain_per_hour = gain / hours
)
transmute(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60,
hours = air_time / 60,
gain_per_hour = gain / hours
)
flights
517 %/% 60
517 %/% 360
517 %/% 100
dep_time %% 100
517 %% 100
mutate(flights,
dep_min_since_midn = (dep_time %/% 100) + (dep_time %% 100)/60)
517 %/% 100 + (517 %% 100)/60
17/60
mutate(flights_sml,
dep_min_since_midn = (dep_time %/% 100) + (dep_time %% 100)/60)
flights_sml <- select(flights, contains("dep"))
mutate(flights_sml,
dep_min_since_midn = (dep_time %/% 100) + (dep_time %% 100)/60)
mutate(flights_sml,
dep_min_since_midn = (dep_time %/% 100) + (dep_time %% 100)/60,
sched_dep_min_since_midn = (sched_dep_time %/% 100) + (sched_dep_time %% 100)/60)
mutate(select(flights, arr_time, dep_time, air_time),
tot_time = arr_time - dep_time)
mutate(select(flights, arr_time, dep_time, air_time),
dep_cont = (dep_time %/% 100) + (dep_time %% 100)/60,
arr_cont = (arr_time %/% 100) + (arr_time %% 100)/60,
tot_time = arr_cont - dep_cont)
mutate(select(flights, arr_time, dep_time, air_time),
dep_cont = (dep_time %/% 100 * 60) + (dep_time %% 100),
arr_cont = (arr_time %/% 100 * 60) + (arr_time %% 100),
tot_time = arr_cont - dep_cont)
mutate(select(flights, dep_time, arr_time, air_time),
dep_cont = (dep_time %/% 100)* 60 + (dep_time %% 100),
arr_cont = (arr_time %/% 100) * 60 + (arr_time %% 100),
tot_time = arr_cont - dep_cont)
mutate(flights_sml,
dep_min_since_midn = (dep_time %/% 100) * 60 + (dep_time %% 100),
sched_dep_min_since_midn = (sched_dep_time %/% 100) * 60 + (sched_dep_time %% 100)
)
flights_sml <- select(flights, contains("dep"))
mutate(flights_sml,
dep_min_since_midn = (dep_time %/% 100) * 60 + (dep_time %% 100),
sched_dep_min_since_midn = (sched_dep_time %/% 100) * 60 + (sched_dep_time %% 100))
mutate(select(flights, dep_time, arr_time, air_time),
dep_cont = (dep_time %/% 100)* 60 + (dep_time %% 100),
arr_cont = (arr_time %/% 100) * 60 + (arr_time %% 100),
tot_time = arr_cont - dep_cont)
arrange(mutate(select(flights, dep_time, arr_time, air_time),
dep_cont = (dep_time %/% 100)* 60 + (dep_time %% 100),
arr_cont = (arr_time %/% 100) * 60 + (arr_time %% 100),
tot_time = arr_cont - dep_cont), tot_time)
arrange(mutate(select(flights, dep_time, arr_time, air_time),
dep_cont = (dep_time %/% 100)* 60 + (dep_time %% 100),
arr_cont = (arr_time %/% 100) * 60 + (arr_time %% 100),
tot_time = arr_cont - dep_cont),
fixed_tot_time = tot_time %% (60*24) - air_time), tot_time)
arrange(mutate(select(flights, dep_time, arr_time, air_time),
dep_cont = (dep_time %/% 100)* 60 + (dep_time %% 100),
arr_cont = (arr_time %/% 100) * 60 + (arr_time %% 100),
tot_time = arr_cont - dep_cont,
fixed_tot_time = tot_time %% (60*24) - air_time), tot_time)
select(flights, dep_time, sched_dep_time, dep_delay)
mutate(dep,
calc_dep_delay = dep_time - sched_dep_time)
dep <- select(flights, dep_time, sched_dep_time, dep_delay)
mutate(dep,
calc_dep_delay = dep_time - sched_dep_time)
mutate(dep,
dep_cont = (dep_time %/% 100)* 60 + (dep_time %% 100),
sched_dep_cont = (sched_dep_time %/% 100)* 60 + (sched_dep_time %% 100),
calc_dep_delay = dep_cont - sched_dep_cont)
flights
mutate(flights,
delay_rank = min_rank(arr_delay))
?min_rank
arrange(mutate(flights,
delay_rank = min_rank(arr_delay)))
delay <- select(flights, arr_delay)
arrange(mutate(delay,
delay_rank = min_rank(arr_delay)))
arrange(mutate(delay,
delay_rank = min_rank(arr_delay)), delay_rank)
arrange(mutate(delay,
delay_rank = min_rank(arr_delay)), desc(delay_rank))
?rank
arrange(mutate(delay,
delay_rank = min_rank(arr_delay)), delay_rank)
arrange(mutate(delay,
delay_rank = min_rank(arr_delay)), desc(delay_rank))
1:3 + 1:10
?trig
??"trig"
by_day <- group_by(flights, year, month, day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE))
delays <- flights %>%
group_by(dest) %>%
summarise(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest != "HNL")
delays
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
# sums total number of miles a given plane flew
not_cancelled %>%
count(tailnum, wt = distance)
flights
not_cancelled %>%
group_by(carrier, flight) %>%
summarise(m_delay = mean(arr_delay, na.rm = TRUE),
sd_delay = sd(arr_delay, na.rm = TRUE))
not_cancelled %>%
group_by(carrier, flight) %>%
summarise(m_delay = mean(arr_delay, na.rm = TRUE),
sd_delay = sd(arr_delay, na.rm = TRUE)) %>%
ggplot(mapping = aes(x = m_delay, y = sd_delay)) +
geom_point() + theme_bw()
not_cancelled %>%
group_by(carrier, flight) %>%
summarise(m_delay = mean(arr_delay, na.rm = TRUE),
sd_delay = sd(arr_delay, na.rm = TRUE)) %>%
ggplot(mapping = aes(x = m_delay, y = sd_delay)) +
geom_point(alpha = 0.5) + theme_bw()
not_cancelled %>%
group_by(carrier, flight) %>%
summarise(count = n(),
m_delay = mean(arr_delay, na.rm = TRUE),
sd_delay = sd(arr_delay, na.rm = TRUE)) %>%
filter(count > 25) %>%
ggplot(mapping = aes(x = m_delay, y = sd_delay)) +
geom_point(alpha = 0.5) + theme_bw()
not_cancelled %>%
group_by(carrier, flight) %>%
summarise(count = n(),
m_delay = mean(dep_delay, na.rm = TRUE),
sd_delay = sd(dep_delay, na.rm = TRUE)) %>%
filter(count > 25) %>%
ggplot(mapping = aes(x = m_delay, y = sd_delay)) +
geom_point(alpha = 0.5) + theme_bw()
not_cancelled %>%
group_by(dest) %>%
summarise(count = n())
not_cancelled %>% count(dest)
not_cancelled %>%
group_by(tailnum) %>%
summarise(tot_mi = sum(distance, na.rm = TRUE))
not_cancelled %>% count(tailnum, wt = distance)
flights %>% filter(is.na(dep_delay))
flights %>% filter(is.na(dep_delay)) %>% arrange(arr_time)
flights %>% filter(is.na(dep_delay)) %>% arrange(dep_time)
flights %>% filter(is.na(arr_delay)) %>% arrange(dep_time)
flights %>% filter(is.na(arr_delay)) %>% arrange(dep_time)
flights %>% filter(is.na(dep_delay)) %>% arrange(arr_time)
flights %>%
group_by(month, day) %>%
summarise(count = n(),
mean_delay = mean(arr_delay))
flights %>%
group_by(month, day) %>%
summarise(count = n(),
mean_delay = mean(arr_delay, na.rm = TRUE))
flights %>%
group_by(month, day) %>%
summarise(count = n(),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
ggplot(mapping = aes(x = count, y = mean_delay)) +
geom_point(alpha = 0.5) + theme_bw()
flights %>%
group_by(month, day) %>%
summarise(count = n(),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
ggplot(mapping = aes(x = count, y = mean_delay)) +
geom_point(alpha = 0.5) + theme_bw() + geom_smooth(method = "lm", se = FALSE)
flights %>%
group_by(month, day) %>%
summarise(count = n(),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
ggplot(mapping = aes(x = count, y = mean_delay)) +
geom_point(alpha = 0.5) + theme_bw() + geom_smooth(se = FALSE)
flights %>%
group_by(month, day) %>%
summarise(count = n(),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
ggplot(mapping = aes(x = count, y = mean_delay)) +
geom_point(alpha = 0.5) + theme_bw() + geom_smooth(method = "lm", se = FALSE)
flights %>%
group_by(month, day) %>%
summarise(count = n(),
cancelled = sum(is.na(arr_delay)),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
ggplot(mapping = aes(x = cancelled, y = mean_delay)) +
geom_point(alpha = 0.5) + theme_bw() + geom_smooth(method = "lm", se = FALSE)
flights %>%
group_by(month, day) %>%
summarise(count = n(),
cancelled = sum(is.na(arr_delay)),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
ggplot(mapping = aes(x = cancelled, y = mean_delay)) +
geom_point(alpha = 0.5) + theme_bw() + geom_smooth(se = FALSE)
flights %>%
group_by(month, day) %>%
summarise(count = n(),
cancelled = sum(is.na(arr_delay)),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
filter(count >  25) %>%
ggplot(mapping = aes(x = cancelled, y = mean_delay)) +
geom_point(alpha = 0.5) + theme_bw() + geom_smooth(se = FALSE)
flights %>%
group_by(month, day) %>%
summarise(count = n(),
cancelled = sum(is.na(arr_delay)),
mean_delay = mean(arr_delay, na.rm = TRUE))
flights %>%
group_by(month, day) %>%
summarise(count = n(),
cancelled = sum(is.na(arr_delay)),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
arrange(desc(cancelled))
flights %>%
group_by(carrier, dest) %>%
summarise(count = n(),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
arrange(desc(mean_delay))
?airlines
airlines
airlines
flights
rm(airlines)
airlines
flights %>%
group_by(carrier, dest) %>%
summarise(count = n(),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
arrange(desc(mean_delay))
flights %>%
group_by(dest, carrier) %>%
summarise(count = n(),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
arrange(desc(mean_delay))
flights %>%
group_by(dest) %>%
summarise(count = n(),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
arrange(desc(mean_delay))
flights %>% select(dest == "CAE")
flights
select(flights, dest == "CAE")
filter(flights, dest == "CAE")
flights %>%
group_by(dest) %>%
summarise(count = n(),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
arrange(desc(mean_delay))
flights %>%
group_by(carrier, dest) %>%
summarise(count = n(),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
arrange(desc(mean_delay))
airlines
flights %>%
group_by(carrier, dest) %>%
summarise(count = n(),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
arrange(desc(mean_delay))
?count
flights
flights %>%
filter(arr_delay > 0) %>%
group_by(tailnum) %>%
mutate(prop_delay = arr_delay / sum(arr_delay)) %>%
filter(rank(desc(prop_delay)) < 10)
flights %>%
filter(arr_delay > 0) %>%
group_by(tailnum) %>%
mutate(prop_delay = arr_delay / sum(arr_delay)) %>%
filter(rank(desc(prop_delay)) < 10) %>%
select(tailnum, prop_delay)
flights %>%
filter(arr_delay > 0) %>%
group_by(tailnum) %>%
mutate(prop_delay = arr_delay / sum(arr_delay)) %>%
filter(rank(prop_delay) < 10) %>%
select(tailnum, prop_delay)
flights %>%
filter(arr_delay > 0) %>%
group_by(tailnum) %>%
mutate(prop_delay = arr_delay / sum(arr_delay)) %>%
arrange(prop_delay, min_rank) %>%
select(tailnum, prop_delay)
?arrange()
flights %>%
filter(arr_delay > 0) %>%
group_by(tailnum) %>%
mutate(prop_delay = arr_delay / sum(arr_delay)) %>%
arrange(min_rank(prop_delay)) %>%
select(tailnum, prop_delay)
flights %>%
filter(arr_delay > 0) %>%
group_by(tailnum) %>%
mutate(prop_delay = arr_delay / sum(arr_delay)) %>%
arrange(rank(prop_delay)) %>%
select(tailnum, prop_delay)
flights %>%
filter(arr_delay > 0) %>%
group_by(tailnum) %>%
mutate(prop_delay = arr_delay / sum(arr_delay)) %>%
filter(rank(prop_delay) < 10) %>%
select(tailnum, prop_delay)
flights %>%
filter(arr_delay > 0) %>%
group_by(tailnum) %>%
mutate(count = n(),
prop_delay = arr_delay / sum(arr_delay)) %>%
filter(rank(prop_delay) < 10) %>%
select(tailnum, count, prop_delay)
flights %>%
filter(arr_delay > 0) %>%
group_by(tailnum) %>%
mutate(count = n(),
prop_delay = arr_delay / sum(arr_delay)) %>%
filter(rank(prop_delay) < 10, count > 5) %>%
select(tailnum, count, prop_delay)
?filter
flights %>%
filter(arr_delay > 0) %>%
group_by(tailnum) %>%
mutate(count = n(),
prop_delay = arr_delay / sum(arr_delay)) %>%
filter(rank(prop_delay) < 10, count > 5) %>%
select(tailnum, count, prop_delay) %>%
arrange(prop_delay)
puzzle <- read.csv("~/Downloads/puzzle.csv", header=FALSE)
View(puzzle)
library(ggplot2)
ggplot(puzzle, aes(v1,V2))
ggplot(puzzle, aes(V1,V2))
ggplot(puzzle, aes(V1,V2)) + geom_point()
ggplot(puzzle, aes(V2,V1)) + geom_point()
list.files(pattern="*_2AFC*.csv")
setwd("~/misc/AVIntegration/dataApril2019")
setwd("~/misc/AVIntegration/dataApril2019")
list.files(pattern="*_2AFC*.csv")
list.files(pattern="*.csv")
?list.files
list.files()
list.files(pattern="*2AFC*.tsv")
list.files(pattern="*.tsv")
list.files(pattern="AVInt_2AFC_sub-*.tsv")
list.files(pattern="AVInt\_2AFC\_sub\-*.tsv")
list.files(pattern="AVInt\\_2AFC\\_sub\\-*.tsv")
list.files(pattern="*2AFC*.tsv")
list.files(pattern="*+2AFC*+.tsv")
list.files(pattern="*2AFC*\\.tsv")
list.files(pattern="*\\.tsv")
list.files(pattern=".*\\.tsv")
list.files(pattern="[0-9]{3}*\\.tsv")
list.files(pattern=".*2AFC.*\\.tsv")
avint <- list.files(pattern=".*2AFC.*\\.tsv")
avint_files <- lapply(avint, read.delim)
do.call(rbind, lapply(avint, function(x) read.csv(x, stringsAsFactors = FALSE)))
do.call(rbind, lapply(avint, function(x) read.delim(x, stringsAsFactors = FALSE)))
avint_data <- do.call(rbind, lapply(avint, function(x) read.delim(x, stringsAsFactors = FALSE)))
av_summary <- avint_data %>%
filter(RT != 999) %>%
group_by(StimType, StimCategory) %>%
summarise(acc = mean(ACC),
RT = mean(RT))
library(tidyverse)
av_summary <- avint_data %>%
filter(RT != 999) %>%
group_by(StimType, StimCategory) %>%
summarise(acc = mean(ACC),
RT = mean(RT))
ggplot(av_summary, aes(StimType, acc)) + geom_bar(stat = "identity") + facet_grid(.~StimCategory) + theme_bw(15)
ggplot(av_summary, aes(StimType, RT)) + geom_bar(stat = "identity") + facet_grid(.~StimCategory) + theme_bw(15)
list.files()
list.files(pattern=".*goodness.*\\.tsv")
goodness_files <- list.files(pattern=".*goodness.*\\.tsv")
good <- do.call(rbind, lapply(goodness_files, function(x) read.delim(x, stringsAsFactors = FALSE)))
good_summary <- good %>%
filter(RT != 999) %>%
group_by(StimType, StimCategory, Rating) %>%
count() %>%
mutate(pct = n/45)
good_summary %>%
ungroup() %>%
mutate(Rating = fct_relevel(Rating, "No B", "Weak", "Medium", "Strong")) %>%
ggplot(., aes(StimType, pct, fill = Rating)) + geom_bar(stat = "identity") + facet_grid(.~StimCategory) +
theme_bw(15) + scale_fill_brewer(palette = "Blues")
length(table(avint_data$Subject))
length(unique(avint_data$Subject))
ggplot(av_summary, aes(StimType, acc)) + geom_bar(stat = "identity") + facet_grid(.~StimCategory) + theme_bw(15) +
ggtitle("AV Int - May 2019 (n = 34)")
ggplot(av_summary, aes(StimType, acc)) + geom_bar(stat = "identity") + facet_grid(.~StimCategory) + theme_bw(15) +
ggtitle("AV Int - May 2019 (n = 34)") + ylab("Accuracy")
good_summary %>%
ungroup() %>%
mutate(Rating = fct_relevel(Rating, "No B", "Weak", "Medium", "Strong")) %>%
ggplot(., aes(StimType, pct, fill = Rating)) + geom_bar(stat = "identity") + facet_grid(.~StimCategory) +
theme_bw(15) + scale_fill_brewer(palette = "Blues") + ggtitle("Goodness Ratings - May 2019 (n = 34)")
good_summary
45/5
9*24
good %>%
filter(RT != 999) %>%
group_by(StimType, StimCategory, Rating) %>%
count()
good_summary <- good %>%
filter(RT != 999) %>%
group_by(StimType, StimCategory, Rating) %>%
count() %>%
mutate(pct = n/(9*34))
good_summary %>%
ungroup() %>%
mutate(Rating = fct_relevel(Rating, "No B", "Weak", "Medium", "Strong")) %>%
ggplot(., aes(StimType, pct, fill = Rating)) + geom_bar(stat = "identity") + facet_grid(.~StimCategory) +
theme_bw(15) + scale_fill_brewer(palette = "Blues") + ggtitle("Goodness Ratings - May 2019 (n = 34)") +
ylab("Percent of ")
good_summary %>%
ungroup() %>%
mutate(Rating = fct_relevel(Rating, "No B", "Weak", "Medium", "Strong")) %>%
ggplot(., aes(StimType, pct, fill = Rating)) + geom_bar(stat = "identity") + facet_grid(.~StimCategory) +
theme_bw(15) + scale_fill_brewer(palette = "Blues") + ggtitle("Goodness Ratings - May 2019 (n = 34)") +
ylab("Percent of Responses")
