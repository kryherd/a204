arrdelay <- filter(flights, dep_delay <=0 & arr_delay > 120)
arrdelay
makeup <- filter(flights, dep_delay >= 60 & (arr_delay - dep_delay < 30))
makeup
makeup <- filter(flights, dep_delay >= 60 & (arr_delay - dep_delay > 30))
makeup
makeup <- filter(flights, dep_delay >= 60 & (arr_delay < dep_delay - 30))
makeup
?between()
morning <- filter(flights, between(dep_time, 0, 600))
morning
summary(morning$dep_time)
summer <- filter(flights, between(month, 7, 9))
summer
morning <- filter(flights, dep_time >= 0 & dep_time <= 600)
summary(morning$dep_time)
missing_dep <- filter(flights, is.na(dep_time))
missing_dep <- filter(flights, is.na(dep_time))
missing_dep
View(missing_dep)
NA & -
0
NA * 0
NA ^ 0
arrange(flights, year, month, day)
df <- tibble(x = c(5, 2, NA))
arrange(df, x)
arrange(flights, desc(is.na()))
df <- tibble(x = c(5, 2, NA))
arrange(flights, desc(is.na(x)))
arrange(df, desc(is.na(x)))
arrange(df, desc(x))
arrange(df, desc(is.na(x)))
flights
arrange(flights, dep_delay, dep_time)
arrange(flights, dep_delay, desc(dep_time))
arrange(flights, desc(dep_delay), dep_time)
arrange(flights, airtime)
arrange(flights, air_time)
arrange(flights, air_time)
arrange(flights, distance)
arrange(flights, desc(distance))
select(flights, -(year:day))
rename(flights, tail_num = tailnum)
?everything
select(flights, time_hour, air_time, everything())
View(delay)
flights
select(flights, dep_time, dep_delay, arr_time, arr_delay)
select(flights, start_with("dep") | starts_with("arr"))
select(flights, starts_with("dep") | starts_with("arr"))
select(flights, starts_with("dep"), starts_with("arr"))
select(flights, ends_with("time"), ends_with("delay"))
select(flights, ends_with("time"), ends_with("delay"), !contains("sched"))
names(flights)
select(flights, c(4,6,7,9))
select(flights, hour, hour)
select(flights, year, year, day, year)
vars <- c("year", "month", "day", "dep_delay", "arr_delay")
select(flights, one_of(vars))
select(flights, contains("TIME"))
?contains
select(flights, contains("TIME", ignore.case = FALSE))
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
mutate(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60
)
mutate(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60,
gain_per_hour = gain / hours
)
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
mutate(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60,
gain_per_hour = gain / hours
)
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
mutate(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60,
gain_per_hour = gain / hour
)
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
flights_sml
mutate(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60,
hours = air_time / 60,
gain_per_hour = gain / hour
)
mutate(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60,
hours = air_time / 60,
gain_per_hour = gain / hours
)
transmute(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60,
hours = air_time / 60,
gain_per_hour = gain / hours
)
flights
517 %/% 60
517 %/% 360
517 %/% 100
dep_time %% 100
517 %% 100
mutate(flights,
dep_min_since_midn = (dep_time %/% 100) + (dep_time %% 100)/60)
517 %/% 100 + (517 %% 100)/60
17/60
mutate(flights_sml,
dep_min_since_midn = (dep_time %/% 100) + (dep_time %% 100)/60)
flights_sml <- select(flights, contains("dep"))
mutate(flights_sml,
dep_min_since_midn = (dep_time %/% 100) + (dep_time %% 100)/60)
mutate(flights_sml,
dep_min_since_midn = (dep_time %/% 100) + (dep_time %% 100)/60,
sched_dep_min_since_midn = (sched_dep_time %/% 100) + (sched_dep_time %% 100)/60)
mutate(select(flights, arr_time, dep_time, air_time),
tot_time = arr_time - dep_time)
mutate(select(flights, arr_time, dep_time, air_time),
dep_cont = (dep_time %/% 100) + (dep_time %% 100)/60,
arr_cont = (arr_time %/% 100) + (arr_time %% 100)/60,
tot_time = arr_cont - dep_cont)
mutate(select(flights, arr_time, dep_time, air_time),
dep_cont = (dep_time %/% 100 * 60) + (dep_time %% 100),
arr_cont = (arr_time %/% 100 * 60) + (arr_time %% 100),
tot_time = arr_cont - dep_cont)
mutate(select(flights, dep_time, arr_time, air_time),
dep_cont = (dep_time %/% 100)* 60 + (dep_time %% 100),
arr_cont = (arr_time %/% 100) * 60 + (arr_time %% 100),
tot_time = arr_cont - dep_cont)
mutate(flights_sml,
dep_min_since_midn = (dep_time %/% 100) * 60 + (dep_time %% 100),
sched_dep_min_since_midn = (sched_dep_time %/% 100) * 60 + (sched_dep_time %% 100)
)
flights_sml <- select(flights, contains("dep"))
mutate(flights_sml,
dep_min_since_midn = (dep_time %/% 100) * 60 + (dep_time %% 100),
sched_dep_min_since_midn = (sched_dep_time %/% 100) * 60 + (sched_dep_time %% 100))
mutate(select(flights, dep_time, arr_time, air_time),
dep_cont = (dep_time %/% 100)* 60 + (dep_time %% 100),
arr_cont = (arr_time %/% 100) * 60 + (arr_time %% 100),
tot_time = arr_cont - dep_cont)
arrange(mutate(select(flights, dep_time, arr_time, air_time),
dep_cont = (dep_time %/% 100)* 60 + (dep_time %% 100),
arr_cont = (arr_time %/% 100) * 60 + (arr_time %% 100),
tot_time = arr_cont - dep_cont), tot_time)
arrange(mutate(select(flights, dep_time, arr_time, air_time),
dep_cont = (dep_time %/% 100)* 60 + (dep_time %% 100),
arr_cont = (arr_time %/% 100) * 60 + (arr_time %% 100),
tot_time = arr_cont - dep_cont),
fixed_tot_time = tot_time %% (60*24) - air_time), tot_time)
arrange(mutate(select(flights, dep_time, arr_time, air_time),
dep_cont = (dep_time %/% 100)* 60 + (dep_time %% 100),
arr_cont = (arr_time %/% 100) * 60 + (arr_time %% 100),
tot_time = arr_cont - dep_cont,
fixed_tot_time = tot_time %% (60*24) - air_time), tot_time)
select(flights, dep_time, sched_dep_time, dep_delay)
mutate(dep,
calc_dep_delay = dep_time - sched_dep_time)
dep <- select(flights, dep_time, sched_dep_time, dep_delay)
mutate(dep,
calc_dep_delay = dep_time - sched_dep_time)
mutate(dep,
dep_cont = (dep_time %/% 100)* 60 + (dep_time %% 100),
sched_dep_cont = (sched_dep_time %/% 100)* 60 + (sched_dep_time %% 100),
calc_dep_delay = dep_cont - sched_dep_cont)
flights
mutate(flights,
delay_rank = min_rank(arr_delay))
?min_rank
arrange(mutate(flights,
delay_rank = min_rank(arr_delay)))
delay <- select(flights, arr_delay)
arrange(mutate(delay,
delay_rank = min_rank(arr_delay)))
arrange(mutate(delay,
delay_rank = min_rank(arr_delay)), delay_rank)
arrange(mutate(delay,
delay_rank = min_rank(arr_delay)), desc(delay_rank))
?rank
arrange(mutate(delay,
delay_rank = min_rank(arr_delay)), delay_rank)
arrange(mutate(delay,
delay_rank = min_rank(arr_delay)), desc(delay_rank))
1:3 + 1:10
?trig
??"trig"
by_day <- group_by(flights, year, month, day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE))
delays <- flights %>%
group_by(dest) %>%
summarise(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest != "HNL")
delays
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
# sums total number of miles a given plane flew
not_cancelled %>%
count(tailnum, wt = distance)
flights
not_cancelled %>%
group_by(carrier, flight) %>%
summarise(m_delay = mean(arr_delay, na.rm = TRUE),
sd_delay = sd(arr_delay, na.rm = TRUE))
not_cancelled %>%
group_by(carrier, flight) %>%
summarise(m_delay = mean(arr_delay, na.rm = TRUE),
sd_delay = sd(arr_delay, na.rm = TRUE)) %>%
ggplot(mapping = aes(x = m_delay, y = sd_delay)) +
geom_point() + theme_bw()
not_cancelled %>%
group_by(carrier, flight) %>%
summarise(m_delay = mean(arr_delay, na.rm = TRUE),
sd_delay = sd(arr_delay, na.rm = TRUE)) %>%
ggplot(mapping = aes(x = m_delay, y = sd_delay)) +
geom_point(alpha = 0.5) + theme_bw()
not_cancelled %>%
group_by(carrier, flight) %>%
summarise(count = n(),
m_delay = mean(arr_delay, na.rm = TRUE),
sd_delay = sd(arr_delay, na.rm = TRUE)) %>%
filter(count > 25) %>%
ggplot(mapping = aes(x = m_delay, y = sd_delay)) +
geom_point(alpha = 0.5) + theme_bw()
not_cancelled %>%
group_by(carrier, flight) %>%
summarise(count = n(),
m_delay = mean(dep_delay, na.rm = TRUE),
sd_delay = sd(dep_delay, na.rm = TRUE)) %>%
filter(count > 25) %>%
ggplot(mapping = aes(x = m_delay, y = sd_delay)) +
geom_point(alpha = 0.5) + theme_bw()
not_cancelled %>%
group_by(dest) %>%
summarise(count = n())
not_cancelled %>% count(dest)
not_cancelled %>%
group_by(tailnum) %>%
summarise(tot_mi = sum(distance, na.rm = TRUE))
not_cancelled %>% count(tailnum, wt = distance)
flights %>% filter(is.na(dep_delay))
flights %>% filter(is.na(dep_delay)) %>% arrange(arr_time)
flights %>% filter(is.na(dep_delay)) %>% arrange(dep_time)
flights %>% filter(is.na(arr_delay)) %>% arrange(dep_time)
flights %>% filter(is.na(arr_delay)) %>% arrange(dep_time)
flights %>% filter(is.na(dep_delay)) %>% arrange(arr_time)
flights %>%
group_by(month, day) %>%
summarise(count = n(),
mean_delay = mean(arr_delay))
flights %>%
group_by(month, day) %>%
summarise(count = n(),
mean_delay = mean(arr_delay, na.rm = TRUE))
flights %>%
group_by(month, day) %>%
summarise(count = n(),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
ggplot(mapping = aes(x = count, y = mean_delay)) +
geom_point(alpha = 0.5) + theme_bw()
flights %>%
group_by(month, day) %>%
summarise(count = n(),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
ggplot(mapping = aes(x = count, y = mean_delay)) +
geom_point(alpha = 0.5) + theme_bw() + geom_smooth(method = "lm", se = FALSE)
flights %>%
group_by(month, day) %>%
summarise(count = n(),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
ggplot(mapping = aes(x = count, y = mean_delay)) +
geom_point(alpha = 0.5) + theme_bw() + geom_smooth(se = FALSE)
flights %>%
group_by(month, day) %>%
summarise(count = n(),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
ggplot(mapping = aes(x = count, y = mean_delay)) +
geom_point(alpha = 0.5) + theme_bw() + geom_smooth(method = "lm", se = FALSE)
flights %>%
group_by(month, day) %>%
summarise(count = n(),
cancelled = sum(is.na(arr_delay)),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
ggplot(mapping = aes(x = cancelled, y = mean_delay)) +
geom_point(alpha = 0.5) + theme_bw() + geom_smooth(method = "lm", se = FALSE)
flights %>%
group_by(month, day) %>%
summarise(count = n(),
cancelled = sum(is.na(arr_delay)),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
ggplot(mapping = aes(x = cancelled, y = mean_delay)) +
geom_point(alpha = 0.5) + theme_bw() + geom_smooth(se = FALSE)
flights %>%
group_by(month, day) %>%
summarise(count = n(),
cancelled = sum(is.na(arr_delay)),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
filter(count >  25) %>%
ggplot(mapping = aes(x = cancelled, y = mean_delay)) +
geom_point(alpha = 0.5) + theme_bw() + geom_smooth(se = FALSE)
flights %>%
group_by(month, day) %>%
summarise(count = n(),
cancelled = sum(is.na(arr_delay)),
mean_delay = mean(arr_delay, na.rm = TRUE))
flights %>%
group_by(month, day) %>%
summarise(count = n(),
cancelled = sum(is.na(arr_delay)),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
arrange(desc(cancelled))
flights %>%
group_by(carrier, dest) %>%
summarise(count = n(),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
arrange(desc(mean_delay))
?airlines
airlines
airlines
flights
rm(airlines)
airlines
flights %>%
group_by(carrier, dest) %>%
summarise(count = n(),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
arrange(desc(mean_delay))
flights %>%
group_by(dest, carrier) %>%
summarise(count = n(),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
arrange(desc(mean_delay))
flights %>%
group_by(dest) %>%
summarise(count = n(),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
arrange(desc(mean_delay))
flights %>% select(dest == "CAE")
flights
select(flights, dest == "CAE")
filter(flights, dest == "CAE")
flights %>%
group_by(dest) %>%
summarise(count = n(),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
arrange(desc(mean_delay))
flights %>%
group_by(carrier, dest) %>%
summarise(count = n(),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
arrange(desc(mean_delay))
airlines
flights %>%
group_by(carrier, dest) %>%
summarise(count = n(),
mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
arrange(desc(mean_delay))
?count
flights
flights %>%
filter(arr_delay > 0) %>%
group_by(tailnum) %>%
mutate(prop_delay = arr_delay / sum(arr_delay)) %>%
filter(rank(desc(prop_delay)) < 10)
flights %>%
filter(arr_delay > 0) %>%
group_by(tailnum) %>%
mutate(prop_delay = arr_delay / sum(arr_delay)) %>%
filter(rank(desc(prop_delay)) < 10) %>%
select(tailnum, prop_delay)
flights %>%
filter(arr_delay > 0) %>%
group_by(tailnum) %>%
mutate(prop_delay = arr_delay / sum(arr_delay)) %>%
filter(rank(prop_delay) < 10) %>%
select(tailnum, prop_delay)
flights %>%
filter(arr_delay > 0) %>%
group_by(tailnum) %>%
mutate(prop_delay = arr_delay / sum(arr_delay)) %>%
arrange(prop_delay, min_rank) %>%
select(tailnum, prop_delay)
?arrange()
flights %>%
filter(arr_delay > 0) %>%
group_by(tailnum) %>%
mutate(prop_delay = arr_delay / sum(arr_delay)) %>%
arrange(min_rank(prop_delay)) %>%
select(tailnum, prop_delay)
flights %>%
filter(arr_delay > 0) %>%
group_by(tailnum) %>%
mutate(prop_delay = arr_delay / sum(arr_delay)) %>%
arrange(rank(prop_delay)) %>%
select(tailnum, prop_delay)
flights %>%
filter(arr_delay > 0) %>%
group_by(tailnum) %>%
mutate(prop_delay = arr_delay / sum(arr_delay)) %>%
filter(rank(prop_delay) < 10) %>%
select(tailnum, prop_delay)
flights %>%
filter(arr_delay > 0) %>%
group_by(tailnum) %>%
mutate(count = n(),
prop_delay = arr_delay / sum(arr_delay)) %>%
filter(rank(prop_delay) < 10) %>%
select(tailnum, count, prop_delay)
flights %>%
filter(arr_delay > 0) %>%
group_by(tailnum) %>%
mutate(count = n(),
prop_delay = arr_delay / sum(arr_delay)) %>%
filter(rank(prop_delay) < 10, count > 5) %>%
select(tailnum, count, prop_delay)
?filter
flights %>%
filter(arr_delay > 0) %>%
group_by(tailnum) %>%
mutate(count = n(),
prop_delay = arr_delay / sum(arr_delay)) %>%
filter(rank(prop_delay) < 10, count > 5) %>%
select(tailnum, count, prop_delay) %>%
arrange(prop_delay)
puzzle <- read.csv("~/Downloads/puzzle.csv", header=FALSE)
View(puzzle)
library(ggplot2)
ggplot(puzzle, aes(v1,V2))
ggplot(puzzle, aes(V1,V2))
ggplot(puzzle, aes(V1,V2)) + geom_point()
ggplot(puzzle, aes(V2,V1)) + geom_point()
library(tidyverse)
setwd("~/Dropbox/Misc Lab Documents/A204")
av <- read.csv("AV_newPL.csv")
setwd("~/misc/AVIntegration/pilotdataFeb2019")
library(tidyverse)
setwd("~/misc/AVIntegration/pilotdataFeb2019")
av <- read.csv("AV_newPL.csv")
av_summary <- av %>%
filter(RT != 999) %>%
group_by(StimType, StimCategory) %>%
summarise(acc = mean(ACC),
RT = mean(RT))
View(av_summary)
ggplot(av_summary, aes(StimType, acc)) + geom_bar(stat = "identity") + facet_grid(.~StimCategory) + theme_bw()
ggplot(av_summary, aes(StimType, acc)) + geom_bar(stat = "identity") + facet_grid(.~StimCategory) + theme_bw()
ggplot(av_summary, aes(StimType, RT)) + geom_bar(stat = "identity") + facet_grid(.~StimCategory) + theme_bw()
ggplot(av_summary, aes(StimType, acc)) + geom_bar(stat = "identity") + facet_grid(.~StimCategory) + theme_bw(15)
ggplot(av_summary, aes(StimType, RT)) + geom_bar(stat = "identity") + facet_grid(.~StimCategory) + theme_bw(15)
good <- read.csv("Goodness_newPL.csv")
good_summary <- good %>%
filter(RT != 999) %>%
group_by(StimType, StimCategory, Rating) %>%
count() %>%
mutate(pct = n/45)
good_summary %>%
ungroup() %>%
mutate(Rating = fct_relevel(Rating, "No B", "Weak", "Medium", "Strong")) %>%
ggplot(., aes(StimType, pct, fill = Rating)) + geom_bar(stat = "identity") + facet_grid(.~StimCategory) + theme_bw()
good_summary %>%
ungroup() %>%
mutate(Rating = fct_relevel(Rating, "No B", "Weak", "Medium", "Strong")) %>%
ggplot(., aes(StimType, pct, fill = Rating)) + geom_bar(stat = "identity") + facet_grid(.~StimCategory) + theme_bw(15)
?scale_fill_brewer
good_summary %>%
ungroup() %>%
mutate(Rating = fct_relevel(Rating, "No B", "Weak", "Medium", "Strong")) %>%
ggplot(., aes(StimType, pct, fill = Rating)) + geom_bar(stat = "identity") + facet_grid(.~StimCategory) +
theme_bw(15) + scale_fill_brewer(palette = "Blues")
View(av)
ggplot(av_summary, aes(StimType, acc)) + geom_bar(stat = "identity") + facet_grid(.~StimCategory) + theme_bw(15)
ggplot(av_summary, aes(StimType, acc)) + geom_bar(stat = "identity") + facet_grid(.~StimCategory) + theme_bw(15)
setwd("~/misc/AVIntegration/pilotdataFeb2019")
av <- read.csv("AV_pilotdata.csv")
good <- read.csv("Goodness_pilotdata.csv")
av_summary <- av %>%
filter(RT != 999) %>%
group_by(StimType, StimCategory) %>%
summarise(acc = mean(ACC),
RT = mean(RT))
ggplot(av_summary, aes(StimType, acc)) + geom_bar(stat = "identity") + facet_grid(.~StimCategory) + theme_bw(15)
